/**
 * @fileoverview This file is generated by the Angular 2 template compiler.
 * Do not edit.
 * @suppress {suspiciousCode,uselessCode,missingProperties}
 */
 /* tslint:disable */

import * as import0 from '@angular/core/src/linker/ng_module_factory';
import * as import1 from './shared.module';
import * as import2 from '@angular/forms/src/directives';
import * as import3 from '@angular/forms/src/form_providers';
import * as import4 from '@angular/common/src/common_module';
import * as import5 from '@angular/http/src/http_module';
import * as import6 from '@angular/material/core/ripple/ripple';
import * as import7 from '@angular/material/button/button';
import * as import8 from '@angular/material/card/card';
import * as import9 from '@angular/material/checkbox/checkbox';
import * as import10 from '@angular/material/core/line/line';
import * as import11 from '@angular/material/grid-list/grid-list';
import * as import12 from '@angular/material/input/input';
import * as import13 from '@angular/material/list/list';
import * as import14 from '@angular/material/progress-bar/progress-bar';
import * as import15 from '@angular/material/progress-circle/progress-circle';
import * as import16 from '@angular/material/sidenav/sidenav';
import * as import17 from '@angular/material/core/portal/portal-directives';
import * as import18 from '@angular/material/tabs/tabs';
import * as import19 from '@angular/material/toolbar/toolbar';
import * as import20 from '@angular/material/core/rtl/dir';
import * as import21 from '@angular/material/core/a11y/index';
import * as import22 from '@angular/material/button-toggle/button-toggle';
import * as import23 from '@angular/material/core/overlay/overlay-directives';
import * as import24 from '@angular/material/dialog/dialog';
import * as import25 from '@angular/material/icon/icon';
import * as import26 from '@angular/material/menu/menu';
import * as import27 from '@angular/material/radio/radio';
import * as import28 from '@angular/material/slider/slider';
import * as import29 from '@angular/material/slide-toggle/slide-toggle';
import * as import30 from '@angular/material/snack-bar/snack-bar';
import * as import31 from '@angular/material/tooltip/tooltip';
import * as import32 from '@angular/material/core/compatibility/style-compatibility';
import * as import33 from '@angular/material/module';
import * as import34 from '@angular/forms/src/form_builder';
import * as import35 from '@angular/forms/src/directives/radio_control_value_accessor';
import * as import36 from '@angular/common/src/localization';
import * as import37 from '@angular/http/src/backends/browser_xhr';
import * as import38 from '@angular/http/src/base_response_options';
import * as import39 from '@angular/http/src/backends/xhr_backend';
import * as import40 from '@angular/http/src/base_request_options';
import * as import41 from '@angular/material/core/gestures/MdGestureConfig';
import * as import42 from '@angular/material/core/a11y/live-announcer';
import * as import43 from '@angular/material/core/a11y/interactivity-checker';
import * as import44 from '@angular/material/core/coordination/unique-selection-dispatcher';
import * as import45 from '@angular/material/core/overlay/overlay-container';
import * as import46 from '@angular/material/core/overlay/position/viewport-ruler';
import * as import47 from '@angular/material/core/overlay/position/overlay-position-builder';
import * as import48 from '@angular/material/core/overlay/overlay';
import * as import49 from '@angular/material/icon/icon-registry';
import * as import50 from '@angular/core/src/di/injector';
import * as import51 from '../../node_modules/@angular/material/dialog/dialog-container.ngfactory';
import * as import52 from '../../node_modules/@angular/material/snack-bar/snack-bar-container.ngfactory';
import * as import53 from '../../node_modules/@angular/material/snack-bar/simple-snack-bar.ngfactory';
import * as import54 from '../../node_modules/@angular/material/tooltip/tooltip.ngfactory';
import * as import55 from '@angular/core/src/i18n/tokens';
import * as import56 from '@angular/core/src/application_ref';
import * as import57 from '@angular/http/src/interfaces';
import * as import58 from '@angular/http/src/http';
import * as import59 from '@angular/platform-browser/src/dom/events/hammer_gestures';
class SharedModuleInjector extends import0.NgModuleInjector<import1.SharedModule> {
  _InternalFormsSharedModule_0:import2.InternalFormsSharedModule;
  _ReactiveFormsModule_1:import3.ReactiveFormsModule;
  _CommonModule_2:import4.CommonModule;
  _HttpModule_3:import5.HttpModule;
  _MdRippleModule_4:import6.MdRippleModule;
  _MdButtonModule_5:import7.MdButtonModule;
  _MdCardModule_6:import8.MdCardModule;
  _MdCheckboxModule_7:import9.MdCheckboxModule;
  _MdLineModule_8:import10.MdLineModule;
  _MdGridListModule_9:import11.MdGridListModule;
  _FormsModule_10:import3.FormsModule;
  _MdInputModule_11:import12.MdInputModule;
  _MdListModule_12:import13.MdListModule;
  _MdProgressBarModule_13:import14.MdProgressBarModule;
  _MdProgressCircleModule_14:import15.MdProgressCircleModule;
  _MdSidenavModule_15:import16.MdSidenavModule;
  _PortalModule_16:import17.PortalModule;
  _MdTabsModule_17:import18.MdTabsModule;
  _MdToolbarModule_18:import19.MdToolbarModule;
  _RtlModule_19:import20.RtlModule;
  _A11yModule_20:import21.A11yModule;
  _MdButtonToggleModule_21:import22.MdButtonToggleModule;
  _OverlayModule_22:import23.OverlayModule;
  _MdDialogModule_23:import24.MdDialogModule;
  _MdIconModule_24:import25.MdIconModule;
  _MdMenuModule_25:import26.MdMenuModule;
  _MdRadioModule_26:import27.MdRadioModule;
  _MdSliderModule_27:import28.MdSliderModule;
  _MdSlideToggleModule_28:import29.MdSlideToggleModule;
  _MdSnackBarModule_29:import30.MdSnackBarModule;
  _MdTooltipModule_30:import31.MdTooltipModule;
  _StyleCompatibilityModule_31:import32.StyleCompatibilityModule;
  _MaterialRootModule_32:import33.MaterialRootModule;
  _MaterialModule_33:import33.MaterialModule;
  _SharedModule_34:import1.SharedModule;
  __FormBuilder_35:import34.FormBuilder;
  __RadioControlRegistry_36:import35.RadioControlRegistry;
  __NgLocalization_37:import36.NgLocaleLocalization;
  __BrowserXhr_38:import37.BrowserXhr;
  __ResponseOptions_39:import38.BaseResponseOptions;
  __XSRFStrategy_40:any;
  __XHRBackend_41:import39.XHRBackend;
  __RequestOptions_42:import40.BaseRequestOptions;
  __Http_43:any;
  __HAMMER_GESTURE_CONFIG_44:import41.MdGestureConfig;
  __MdLiveAnnouncer_45:import42.MdLiveAnnouncer;
  __InteractivityChecker_46:import43.InteractivityChecker;
  __MdUniqueSelectionDispatcher_47:import44.MdUniqueSelectionDispatcher;
  __OverlayContainer_48:import45.OverlayContainer;
  __ViewportRuler_49:import46.ViewportRuler;
  __OverlayPositionBuilder_50:import47.OverlayPositionBuilder;
  __Overlay_51:import48.Overlay;
  __MdDialog_52:import24.MdDialog;
  __MdIconRegistry_53:import49.MdIconRegistry;
  __MdSnackBar_54:import30.MdSnackBar;
  constructor(parent:import50.Injector) {
    super(parent,[
      import51.MdDialogContainerNgFactory,
      import52.MdSnackBarContainerNgFactory,
      import53.SimpleSnackBarNgFactory,
      import54.TooltipComponentNgFactory
    ]
    ,([] as any[]));
  }
  get _FormBuilder_35():import34.FormBuilder {
    if ((this.__FormBuilder_35 == null)) { (this.__FormBuilder_35 = new import34.FormBuilder()); }
    return this.__FormBuilder_35;
  }
  get _RadioControlRegistry_36():import35.RadioControlRegistry {
    if ((this.__RadioControlRegistry_36 == null)) { (this.__RadioControlRegistry_36 = new import35.RadioControlRegistry()); }
    return this.__RadioControlRegistry_36;
  }
  get _NgLocalization_37():import36.NgLocaleLocalization {
    if ((this.__NgLocalization_37 == null)) { (this.__NgLocalization_37 = new import36.NgLocaleLocalization(this.parent.get(import55.LOCALE_ID))); }
    return this.__NgLocalization_37;
  }
  get _BrowserXhr_38():import37.BrowserXhr {
    if ((this.__BrowserXhr_38 == null)) { (this.__BrowserXhr_38 = new import37.BrowserXhr()); }
    return this.__BrowserXhr_38;
  }
  get _ResponseOptions_39():import38.BaseResponseOptions {
    if ((this.__ResponseOptions_39 == null)) { (this.__ResponseOptions_39 = new import38.BaseResponseOptions()); }
    return this.__ResponseOptions_39;
  }
  get _XSRFStrategy_40():any {
    if ((this.__XSRFStrategy_40 == null)) { (this.__XSRFStrategy_40 = import5._createDefaultCookieXSRFStrategy()); }
    return this.__XSRFStrategy_40;
  }
  get _XHRBackend_41():import39.XHRBackend {
    if ((this.__XHRBackend_41 == null)) { (this.__XHRBackend_41 = new import39.XHRBackend(this._BrowserXhr_38,this._ResponseOptions_39,this._XSRFStrategy_40)); }
    return this.__XHRBackend_41;
  }
  get _RequestOptions_42():import40.BaseRequestOptions {
    if ((this.__RequestOptions_42 == null)) { (this.__RequestOptions_42 = new import40.BaseRequestOptions()); }
    return this.__RequestOptions_42;
  }
  get _Http_43():any {
    if ((this.__Http_43 == null)) { (this.__Http_43 = import5.httpFactory(this._XHRBackend_41,this._RequestOptions_42)); }
    return this.__Http_43;
  }
  get _HAMMER_GESTURE_CONFIG_44():import41.MdGestureConfig {
    if ((this.__HAMMER_GESTURE_CONFIG_44 == null)) { (this.__HAMMER_GESTURE_CONFIG_44 = new import41.MdGestureConfig()); }
    return this.__HAMMER_GESTURE_CONFIG_44;
  }
  get _MdLiveAnnouncer_45():import42.MdLiveAnnouncer {
    if ((this.__MdLiveAnnouncer_45 == null)) { (this.__MdLiveAnnouncer_45 = new import42.MdLiveAnnouncer(this.parent.get(import42.LIVE_ANNOUNCER_ELEMENT_TOKEN,(null as any)))); }
    return this.__MdLiveAnnouncer_45;
  }
  get _InteractivityChecker_46():import43.InteractivityChecker {
    if ((this.__InteractivityChecker_46 == null)) { (this.__InteractivityChecker_46 = new import43.InteractivityChecker()); }
    return this.__InteractivityChecker_46;
  }
  get _MdUniqueSelectionDispatcher_47():import44.MdUniqueSelectionDispatcher {
    if ((this.__MdUniqueSelectionDispatcher_47 == null)) { (this.__MdUniqueSelectionDispatcher_47 = new import44.MdUniqueSelectionDispatcher()); }
    return this.__MdUniqueSelectionDispatcher_47;
  }
  get _OverlayContainer_48():import45.OverlayContainer {
    if ((this.__OverlayContainer_48 == null)) { (this.__OverlayContainer_48 = new import45.OverlayContainer()); }
    return this.__OverlayContainer_48;
  }
  get _ViewportRuler_49():import46.ViewportRuler {
    if ((this.__ViewportRuler_49 == null)) { (this.__ViewportRuler_49 = new import46.ViewportRuler()); }
    return this.__ViewportRuler_49;
  }
  get _OverlayPositionBuilder_50():import47.OverlayPositionBuilder {
    if ((this.__OverlayPositionBuilder_50 == null)) { (this.__OverlayPositionBuilder_50 = new import47.OverlayPositionBuilder(this._ViewportRuler_49)); }
    return this.__OverlayPositionBuilder_50;
  }
  get _Overlay_51():import48.Overlay {
    if ((this.__Overlay_51 == null)) { (this.__Overlay_51 = new import48.Overlay(this._OverlayContainer_48,this,this._OverlayPositionBuilder_50,this.parent.get(import56.ApplicationRef),this)); }
    return this.__Overlay_51;
  }
  get _MdDialog_52():import24.MdDialog {
    if ((this.__MdDialog_52 == null)) { (this.__MdDialog_52 = new import24.MdDialog(this._Overlay_51,this)); }
    return this.__MdDialog_52;
  }
  get _MdIconRegistry_53():import49.MdIconRegistry {
    if ((this.__MdIconRegistry_53 == null)) { (this.__MdIconRegistry_53 = new import49.MdIconRegistry(this._Http_43)); }
    return this.__MdIconRegistry_53;
  }
  get _MdSnackBar_54():import30.MdSnackBar {
    if ((this.__MdSnackBar_54 == null)) { (this.__MdSnackBar_54 = new import30.MdSnackBar(this._Overlay_51,this._MdLiveAnnouncer_45)); }
    return this.__MdSnackBar_54;
  }
  createInternal():import1.SharedModule {
    this._InternalFormsSharedModule_0 = new import2.InternalFormsSharedModule();
    this._ReactiveFormsModule_1 = new import3.ReactiveFormsModule();
    this._CommonModule_2 = new import4.CommonModule();
    this._HttpModule_3 = new import5.HttpModule();
    this._MdRippleModule_4 = new import6.MdRippleModule();
    this._MdButtonModule_5 = new import7.MdButtonModule();
    this._MdCardModule_6 = new import8.MdCardModule();
    this._MdCheckboxModule_7 = new import9.MdCheckboxModule();
    this._MdLineModule_8 = new import10.MdLineModule();
    this._MdGridListModule_9 = new import11.MdGridListModule();
    this._FormsModule_10 = new import3.FormsModule();
    this._MdInputModule_11 = new import12.MdInputModule();
    this._MdListModule_12 = new import13.MdListModule();
    this._MdProgressBarModule_13 = new import14.MdProgressBarModule();
    this._MdProgressCircleModule_14 = new import15.MdProgressCircleModule();
    this._MdSidenavModule_15 = new import16.MdSidenavModule();
    this._PortalModule_16 = new import17.PortalModule();
    this._MdTabsModule_17 = new import18.MdTabsModule();
    this._MdToolbarModule_18 = new import19.MdToolbarModule();
    this._RtlModule_19 = new import20.RtlModule();
    this._A11yModule_20 = new import21.A11yModule();
    this._MdButtonToggleModule_21 = new import22.MdButtonToggleModule();
    this._OverlayModule_22 = new import23.OverlayModule();
    this._MdDialogModule_23 = new import24.MdDialogModule();
    this._MdIconModule_24 = new import25.MdIconModule();
    this._MdMenuModule_25 = new import26.MdMenuModule();
    this._MdRadioModule_26 = new import27.MdRadioModule();
    this._MdSliderModule_27 = new import28.MdSliderModule();
    this._MdSlideToggleModule_28 = new import29.MdSlideToggleModule();
    this._MdSnackBarModule_29 = new import30.MdSnackBarModule();
    this._MdTooltipModule_30 = new import31.MdTooltipModule();
    this._StyleCompatibilityModule_31 = new import32.StyleCompatibilityModule();
    this._MaterialRootModule_32 = new import33.MaterialRootModule();
    this._MaterialModule_33 = new import33.MaterialModule();
    this._SharedModule_34 = new import1.SharedModule();
    return this._SharedModule_34;
  }
  getInternal(token:any,notFoundResult:any):any {
    if ((token === import2.InternalFormsSharedModule)) { return this._InternalFormsSharedModule_0; }
    if ((token === import3.ReactiveFormsModule)) { return this._ReactiveFormsModule_1; }
    if ((token === import4.CommonModule)) { return this._CommonModule_2; }
    if ((token === import5.HttpModule)) { return this._HttpModule_3; }
    if ((token === import6.MdRippleModule)) { return this._MdRippleModule_4; }
    if ((token === import7.MdButtonModule)) { return this._MdButtonModule_5; }
    if ((token === import8.MdCardModule)) { return this._MdCardModule_6; }
    if ((token === import9.MdCheckboxModule)) { return this._MdCheckboxModule_7; }
    if ((token === import10.MdLineModule)) { return this._MdLineModule_8; }
    if ((token === import11.MdGridListModule)) { return this._MdGridListModule_9; }
    if ((token === import3.FormsModule)) { return this._FormsModule_10; }
    if ((token === import12.MdInputModule)) { return this._MdInputModule_11; }
    if ((token === import13.MdListModule)) { return this._MdListModule_12; }
    if ((token === import14.MdProgressBarModule)) { return this._MdProgressBarModule_13; }
    if ((token === import15.MdProgressCircleModule)) { return this._MdProgressCircleModule_14; }
    if ((token === import16.MdSidenavModule)) { return this._MdSidenavModule_15; }
    if ((token === import17.PortalModule)) { return this._PortalModule_16; }
    if ((token === import18.MdTabsModule)) { return this._MdTabsModule_17; }
    if ((token === import19.MdToolbarModule)) { return this._MdToolbarModule_18; }
    if ((token === import20.RtlModule)) { return this._RtlModule_19; }
    if ((token === import21.A11yModule)) { return this._A11yModule_20; }
    if ((token === import22.MdButtonToggleModule)) { return this._MdButtonToggleModule_21; }
    if ((token === import23.OverlayModule)) { return this._OverlayModule_22; }
    if ((token === import24.MdDialogModule)) { return this._MdDialogModule_23; }
    if ((token === import25.MdIconModule)) { return this._MdIconModule_24; }
    if ((token === import26.MdMenuModule)) { return this._MdMenuModule_25; }
    if ((token === import27.MdRadioModule)) { return this._MdRadioModule_26; }
    if ((token === import28.MdSliderModule)) { return this._MdSliderModule_27; }
    if ((token === import29.MdSlideToggleModule)) { return this._MdSlideToggleModule_28; }
    if ((token === import30.MdSnackBarModule)) { return this._MdSnackBarModule_29; }
    if ((token === import31.MdTooltipModule)) { return this._MdTooltipModule_30; }
    if ((token === import32.StyleCompatibilityModule)) { return this._StyleCompatibilityModule_31; }
    if ((token === import33.MaterialRootModule)) { return this._MaterialRootModule_32; }
    if ((token === import33.MaterialModule)) { return this._MaterialModule_33; }
    if ((token === import1.SharedModule)) { return this._SharedModule_34; }
    if ((token === import34.FormBuilder)) { return this._FormBuilder_35; }
    if ((token === import35.RadioControlRegistry)) { return this._RadioControlRegistry_36; }
    if ((token === import36.NgLocalization)) { return this._NgLocalization_37; }
    if ((token === import37.BrowserXhr)) { return this._BrowserXhr_38; }
    if ((token === import38.ResponseOptions)) { return this._ResponseOptions_39; }
    if ((token === import57.XSRFStrategy)) { return this._XSRFStrategy_40; }
    if ((token === import39.XHRBackend)) { return this._XHRBackend_41; }
    if ((token === import40.RequestOptions)) { return this._RequestOptions_42; }
    if ((token === import58.Http)) { return this._Http_43; }
    if ((token === import59.HAMMER_GESTURE_CONFIG)) { return this._HAMMER_GESTURE_CONFIG_44; }
    if ((token === import42.MdLiveAnnouncer)) { return this._MdLiveAnnouncer_45; }
    if ((token === import43.InteractivityChecker)) { return this._InteractivityChecker_46; }
    if ((token === import44.MdUniqueSelectionDispatcher)) { return this._MdUniqueSelectionDispatcher_47; }
    if ((token === import45.OverlayContainer)) { return this._OverlayContainer_48; }
    if ((token === import46.ViewportRuler)) { return this._ViewportRuler_49; }
    if ((token === import47.OverlayPositionBuilder)) { return this._OverlayPositionBuilder_50; }
    if ((token === import48.Overlay)) { return this._Overlay_51; }
    if ((token === import24.MdDialog)) { return this._MdDialog_52; }
    if ((token === import49.MdIconRegistry)) { return this._MdIconRegistry_53; }
    if ((token === import30.MdSnackBar)) { return this._MdSnackBar_54; }
    return notFoundResult;
  }
  destroyInternal():void {
  }
}
export const SharedModuleNgFactory:import0.NgModuleFactory<import1.SharedModule> = new import0.NgModuleFactory(SharedModuleInjector,import1.SharedModule);